% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SFA.R
\name{sfa.fit}
\alias{sfa.fit}
\title{sfa.fit}
\usage{
sfa.fit(y, X, CM = NULL, CV = NULL, K = NULL, ineff = -1,
  structure = "cs", dist = "tnorm", spec = NULL, intercept = TRUE,
  intercept_CM = TRUE, intercept_CV = TRUE, sv_f = NULL, sv_cm = NULL,
  sv_cv = NULL, ll = NULL, opt_method = "SANN", opt_control = NULL,
  deb = F, debll = F)
}
\arguments{
\item{y}{dependent (production/cost) variable.}

\item{X}{variables of the production/cost function.}

\item{CM}{data for exogneous determinants of the conditional mean inefficiency.}

\item{CV}{data for exogneous determinants of the conditional variance of inefficiency term.}

\item{K}{matrix of panel data indeces.}

\item{ineff}{-1 (or 1) for production (or cost) function.}

\item{structure}{"cs" for cross-section or "panel" for panel data model. (not functional yet)}

\item{dist}{distribution of inefficiency term ("hnorm", "exp", "tnorm").}

\item{spec}{specifies what model of endogeneous inefficiency term should be used (currently only bc95 for cross-section implemented).}

\item{intercept}{TRUE/FALSE if the intercept term should be added to the main formula.}

\item{intercept_CM}{TRUE/FALSE if the intercept should be added to the conditional mean inefficiency formula.}

\item{intercept_CV}{TRUE/FALSE if the intercept should be added to the conditional inefficiency variance formula. (not functional yet)}

\item{sv_f}{starting values for frontier model parameters.}

\item{sv_cm}{starting values for conditional mean model parameters. (not functional yet)}

\item{sv_cv}{starting values for conditional variance model parameters. (not functional yet)}

\item{ll}{allows custom log-likelihood function that will be MINIMIZED.}

\item{opt_method}{optimization method.}

\item{opt_control}{list of options for optimization routine.}

\item{deb}{debug mode (TRUE/FALSE).}
}
\value{
list object of class SFA.
}
\description{
Fits stochastic frontier analysis (SFA) model
}
\details{
Experiment with different optimization algorithms:

SANN - slow but better results, maxit = 1e4, tmax = 15, temp = 1

L-BFGS-B - very fast, but can crash on infinite values
}

