% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SFA.R
\name{sfa.fit}
\alias{sfa.fit}
\title{sfa.fit}
\usage{
sfa.fit(y, X, CM = NULL, CV_u = NULL, CV_v = NULL, ineff = -1L,
  dist = c("tnorm", "hnorm", "exp"), spec = NULL, intercept = list(f =
  TRUE, cm = TRUE, cv_u = TRUE, cv_v = TRUE), sv = list(f = NULL, cm = NULL,
  cv_u = NULL, cv_v = NULL), ll = NULL, opt_method = "SANN",
  opt_control = NULL, deb = F, debll = F)
}
\arguments{
\item{y}{dependent (production/cost) variable.}

\item{X}{variables of the production/cost function.}

\item{CM}{data for conditional mean model of the inefficiency (asymmetric error) term.}

\item{CV_u}{data for conditional variance model of the inefficiency (asymmetric error) term.}

\item{CV_v}{data for conditional variance model of the symmetric error term.}

\item{ineff}{-1 (or 1) for production (or cost) function, where inefficiency decreases (or increases) the total output (or costs).}

\item{dist}{distribution of inefficiency term ("hnorm", "exp", "tnorm").}

\item{spec}{specifies what model of endogeneous inefficiency term should be used (currently only bc95 for cross-section implemented).}

\item{intercept}{list of logical values:
\itemize{
\item f -- TRUE if the intercept term should be added to the main formula.
\item cm -- TRUE if the intercept should be added to the conditional mean equation for the asymmetric term
\item cv_u -- TRUE if the intercept should be added to the conditional inefficiency variance formula.
\item cv_v -- TRUE if the intercept should be added to the conditional inefficiency variance formula.
}}

\item{sv}{list. starting values for:
\itemize{
\item f -- frontier model parameters,
\item cm starting values for conditional mean model parameters.
\item cv_u starting values for conditional variance of the inefficiency term model parameters.
\item cv_v starting values for conditional variance of the symmetric term model parameters.
}}

\item{ll}{allows custom log-likelihood function that will be MINIMIZED.}

\item{opt_method}{optimization method.}

\item{opt_control}{list of options for optimization routine.}

\item{deb}{debug mode (TRUE/FALSE).}

\item{debll}{debug mode of log likelihood functions (TRUE/FALSE).}
}
\value{
Returns object of the class SFA which is a list object consisting:
\itemize{
\item coeff -- coefficients for stochastic frontier model
\item coeff_cm -- coefficients for conditional mean of the inefficiency term model
\item coeff_cv_u -- coefficients for conditional variance of the inefficiency term model (heteroskedasticity in the inefficiency)
\item coeff_cv_v -- coefficients for conditional variance of the symmetric error term model (heteroskedasticity in the frontier model error)
\item residuals -- total residuals (= both u + v terms)
\item parameters -- vector of all parameters returend from miximization of log-likelihood
\item N -- total number of observations
\item ineff -- -1 (1 resp.) for production (cost resp.) function
\item ineff_name -- either "production" or "cost" string
\item data -- list of all data used for estimation (including unit vectors as intercepts if appropriate)
\item call is list of \itemize{
   \item intercept
   \item dist
   \item spec
   \item structure
   \item sv
}
\item loglik -- log-likehood
\item hessian -- hessian matrix
\item lmfit -- fitted linear model
}
}
\description{
Fits stochastic frontier analysis (SFA) model
}
\details{
Notice that the choice of optimization method may have significant impact on the results. It is recommanded to experiment with different optimization algorithms. Recommended are:
\itemize{
\item SANN -- In general, this is the most robust method. It can be slow with larger datasets or more complex models but the results tend to be better if parameters \code{maxit, tmax, temp} are set correctly (maxit > 1e4+, tmax = 15, temp = 1).
\item L-BFGS-B -- Fastest, but can crashes on complex models (infinite log-likelihood values etc...). If starting values are set well, it leads to the same results as SANN but much faster.
\item BFGS -- Fast, but can crashes on complex models (infinite log-likelihood values etc...).
}
See help for \code{optim()} function.
}
\examples{
See vignettes.

}

